{"version":3,"sources":["reportWebVitals.ts","components/common/theme.tsx","components/common/header.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","primaryFontFamily","Header","useStyletron","css","className","backgroundColor","borderBottom","colors","mono400","maxWidth","margin","height","display","alignItems","width","src","alt","typography","font850","paddingLeft","sizing","scale300","marginLeft","scale1000","href","font300","textDecoration","color","black","white","paddingTop","scale900","paddingBottom","scale700","marginRight","scale800","engine","Styletron","ReactDOM","render","StrictMode","value","document","getElementById"],"mappings":"8LAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCHDQ,EAAQC,YAJF,CACjBC,kBAAmB,0B,uBCARC,EAAS,WAAO,IAAD,EACLC,cADK,mBACnBC,EADmB,KACdL,EADc,KAG1B,OACE,4BACEM,UAAWD,EAAI,CACbE,gBAAiB,QACjBC,aAAa,aAAD,OAAeR,EAAMS,OAAOC,YAG1C,yBACEJ,UAAWD,EAAI,CACbM,SAAU,QACVC,OAAQ,WACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,YAGd,yBAAKT,UAAWD,EAAI,CAAES,QAAS,OAAQC,WAAY,YACjD,yBAAKC,MAAM,KAAKC,IAAI,YAAYC,IAAI,gBACpC,wBACEZ,UAAWD,EAAI,2BACVL,EAAMmB,WAAWC,SADR,IAEZR,OAAQ,EACRS,YAAarB,EAAMsB,OAAOC,aAJ9B,YAUF,yBAAKjB,UAAWD,EAAI,CAAEmB,WAAYxB,EAAMsB,OAAOG,aAC7C,uBACEC,KAAK,IACLpB,UAAWD,EAAI,2BACVL,EAAMmB,WAAWQ,SADR,IAEZC,eAAgB,OAChBC,MAAO7B,EAAMS,OAAOqB,MACpBtB,aAAa,aAAD,OAAeR,EAAMS,OAAOsB,OACxCC,WAAYhC,EAAMsB,OAAOW,SACzBC,cAAelC,EAAMsB,OAAOa,SAC5BC,YAAapC,EAAMsB,OAAOe,SAC1B,SAAU,CACR7B,aAAa,aAAD,OAAeR,EAAMS,OAAOqB,YAX9C,eAiBA,uBACEJ,KAAK,IACLpB,UAAWD,EAAI,2BACVL,EAAMmB,WAAWQ,SADR,IAEZC,eAAgB,OAChBC,MAAO7B,EAAMS,OAAOqB,MACpBtB,aAAa,aAAD,OAAeR,EAAMS,OAAOsB,OACxCC,WAAYhC,EAAMsB,OAAOW,SACzBC,cAAelC,EAAMsB,OAAOa,SAC5BC,YAAapC,EAAMsB,OAAOe,SAC1B,SAAU,CACR7B,aAAa,aAAD,OAAeR,EAAMS,OAAOqB,YAX9C,4B,QCxCJQ,EAAS,IAAIC,IAEnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAmBC,MAAOL,GACxB,kBAAC,IAAD,CAActC,MAAOA,GACnB,kBAAC,IAAD,KACE,kBAAC,EAAD,MAMA,kBAAC,IAAD,2CAKR4C,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.64333df5.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createTheme } from 'baseui'\n\nconst primitives = {\n  primaryFontFamily: \"'Roboto', sans-serif;\",\n}\n\nexport const theme = createTheme(primitives)\n","import React from 'react'\nimport { useStyletron } from 'baseui'\n\nexport const Header = () => {\n  const [css, theme] = useStyletron()\n\n  return (\n    <header\n      className={css({\n        backgroundColor: 'white',\n        borderBottom: `1px solid ${theme.colors.mono400}`,\n      })}\n    >\n      <div\n        className={css({\n          maxWidth: '999px',\n          margin: '0px auto',\n          height: '64px',\n          display: 'flex',\n          alignItems: 'center',\n        })}\n      >\n        <div className={css({ display: 'flex', alignItems: 'center' })}>\n          <img width=\"32\" src=\"/logo.png\" alt=\"anaijs logo\" />\n          <h1\n            className={css({\n              ...theme.typography.font850,\n              margin: 0,\n              paddingLeft: theme.sizing.scale300,\n            })}\n          >\n            anai.js\n          </h1>\n        </div>\n        <nav className={css({ marginLeft: theme.sizing.scale1000 })}>\n          <a\n            href=\"/\"\n            className={css({\n              ...theme.typography.font300,\n              textDecoration: 'none',\n              color: theme.colors.black,\n              borderBottom: `3px solid ${theme.colors.white}`,\n              paddingTop: theme.sizing.scale900,\n              paddingBottom: theme.sizing.scale700,\n              marginRight: theme.sizing.scale800,\n              ':hover': {\n                borderBottom: `3px solid ${theme.colors.black}`,\n              },\n            })}\n          >\n            experiments\n          </a>\n          <a\n            href=\"/\"\n            className={css({\n              ...theme.typography.font300,\n              textDecoration: 'none',\n              color: theme.colors.black,\n              borderBottom: `3px solid ${theme.colors.white}`,\n              paddingTop: theme.sizing.scale900,\n              paddingBottom: theme.sizing.scale700,\n              marginRight: theme.sizing.scale800,\n              ':hover': {\n                borderBottom: `3px solid ${theme.colors.black}`,\n              },\n            })}\n          >\n            giới thiệu\n          </a>\n        </nav>\n      </div>\n    </header>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as StyletronProvider } from 'styletron-react'\n\nimport { BaseProvider } from 'baseui'\nimport reportWebVitals from './reportWebVitals'\nimport { Display } from 'baseui/typography'\nimport { theme } from './components/common/theme'\nimport { Header } from './components/common/header'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst engine = new Styletron()\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={theme}>\n        <BrowserRouter>\n          <Header />\n          {/* <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/profile\"><Profile /></Route>\n      </Switch> */}\n\n          <Display>Xin chào thế giới</Display>\n        </BrowserRouter>\n      </BaseProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}